package org.ergoplatform.mining.difficulty

import org.ergoplatform.utils.ErgoPropertyTest

class DifficultySerializerSpecification extends ErgoPropertyTest {

  property("external vectors from BitcoinJ") {
    val longs = Seq(0x180130e0, 0x18019eaf, 0x1802cc47, 0x1806f0a8, 0x187c3053, 0x1a05db8b, 0x1b0404cb, 0x1c20bca7, 0x1d00ffff, 0x181bc330,
      0x207fffff, 0x01003456, 0x01123456, 0x02008000, 0x05009234, 0x04923456, 0x04123456)
    val expected = Seq("130e0000000000000000000000000000000000000000000",
      "19eaf000000000000000000000000000000000000000000",
      "2cc47000000000000000000000000000000000000000000",
      "6f0a8000000000000000000000000000000000000000000",
      "7c3053000000000000000000000000000000000000000000",
      "5db8b0000000000000000000000000000000000000000000000",
      "404cb000000000000000000000000000000000000000000000000",
      "20bca700000000000000000000000000000000000000000000000000",
      "ffff0000000000000000000000000000000000000000000000000000",
      "1bc330000000000000000000000000000000000000000000",
      "7fffff0000000000000000000000000000000000000000000000000000000000",
      "0",
      "12",
      "80",
      "92340000",
      "-12345600",
      "12345600")
    val calculated: Seq[String] = longs.map(nBits => DifficultySerializer.decodeCompactBits(nBits).toString(16))

    calculated shouldEqual expected
  }
}
