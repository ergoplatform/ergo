ergo {
  # Directory to keep data
  directory = ${user.dir}"/ergo/data"

  # Settings for node view holder regime. See papers.yellow.ModifiersProcessing.md
  node {
    # State type.  Possible options are:
    # "utxo" - keep full utxo set, that allows to validate arbitrary block and generate ADProofs
    # "digest" - keep state root hash only and validate transactions via ADProofs
    stateType = "utxo"

    # Download block transactions and verify them (requires BlocksToKeep == 0 if disabled)
    verifyTransactions = true

    # Number of last blocks to keep with transactions and ADproofs, for all other blocks only header will be stored.
    # Keep all blocks from genesis if negative
    blocksToKeep = 1000

    # Download PoPoW proof on node bootstrap
    PoPoWBootstrap = false

    # Minimal suffix size for PoPoW proof (may be pre-defined constant or settings parameter)
    minimalSuffix = 10

    # Is the node is doing mining
    mining = false

    # If true, a node generates blocks being offline. The only really useful case for it probably is to start a new
    # blockchain
    offlineGeneration = false

    # Delay for miner after succesful block creation
    miningDelay = 1s
  }

  #Chain-specific settings. Change only if you are going to launch a new chain!
  chain {

    # Desired time interval between blocks
    blockInterval = 1m

    # length of an epoch in difficulty recalculation
    epochLength = 100

    //Proof-of-Work algorithm and its parameters. Possible options are "fake" and "equihash".
    powScheme {
      powType = "fake"
      n = 96 //used by Equihash
      k = 5  //used by Equihash
    }
  }
}

akka {
  test {
    timefactor = 2 # duration scale factor to prevent spurious test failures on the heavily loaded CI servers
  }
}
