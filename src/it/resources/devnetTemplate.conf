ergo {
  # Settings for node view holder regime. See papers.yellow.ModifiersProcessing.md
  node {
    # State type.  Possible options are:
    # "utxo" - keep full utxo set, that allows to validate arbitrary block and generate ADProofs
    # "digest" - keep state root hash only and validate transactions via ADProofs
    stateType = "utxo"

    # Download block transactions and verify them (requires BlocksToKeep == 0 if disabled)
    verifyTransactions = true

    # Number of last blocks to keep with transactions and ADproofs, for all other blocks only header will be stored.
    # Keep all blocks from genesis if negative
    blocksToKeep = -1

    # Download PoPoW proof on node bootstrap
    PoPoWBootstrap = false

    # Minimal suffix size for PoPoW proof (may be pre-defined constant or settings parameter)
    minimalSuffix = 10

    # Is the node is doing mining
    mining = true

    # Use external miner, native miner is used if set to `false`
    useExternalMiner = false

    # If true, a node generates blocks being offline. The only really useful case for it probably is to start a new
    # blockchain
    offlineGeneration = true

    # internal miner's interval of polling for a candidate
    internalMinerPollingInterval = 5s

    mempoolCapacity = 10000
  }

  chain {
    powScheme {
      powType = "autolykos"
      k = 32
      n = 26
    }
  }

}

scorex {
  network {
    maxPacketSize = 2048576
    maxInvObjects = 400
    bindAddress = "0.0.0.0:9001"
    knownPeers = []
    agentName = "ergo-integration-test"
  }
  restApi {
    bindAddress = "0.0.0.0:9051"
    apiKeyHash = null
  }
}