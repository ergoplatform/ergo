ergo {
  # Directory to keep data
  directory = ${user.dir}"/ergo/data"

  # Settings for node view holder regime. See papers.yellow.ModifiersProcessing.md
  node {
    # State type.  Possible options are:
    # "utxo" - keep full utxo set, that allows to validate arbitrary block and generate ADProofs
    # "digest" - keep state root hash only and validate transactions via ADProofs
    stateType = "utxo"

    # Download block transactions and verify them (requires BlocksToKeep == 0 if disabled)
    verifyTransactions = true

    # Number of last blocks to keep with transactions and ADproofs, for all other blocks only header will be stored.
    # Keep all blocks from genesis if negative
    blocksToKeep = -1

    # Download PoPoW proof on node bootstrap
    PoPoWBootstrap = false

    # Minimal suffix size for PoPoW proof (may be pre-defined constant or settings parameter)
    minimalSuffix = 10

    # Is the node is doing mining
    mining = false

    # If true, a node generates blocks being offline. The only really useful case for it probably is to start a new
    # blockchain
    offlineGeneration = false

    # Delay for miner after succesful block creation
    miningDelay = 5s

    # Number of state snapshot diffs to keep. Defines maximum rollback depth
    keepVersions = 200
  }

  testing {
    # Turn on transaction generator
    transactionGeneration = false
  }

  cache {
    # Number of recently used modifiers that will be kept in memory
    historyStorageCacheSize = 1000
  }

  # Chain-specific settings. Change only if you are going to launch a new chain!
  chain {
    # Network address prefix, currently reserved values are 0x00 (money chain mainnet) and 0x20 (32 in decimal,
    # money chain testnet)
    addressPrefix = 16

    # Monetary config for chain
    monetary {
      # number of blocks reward won't change (525600 (2 years) for mainnet, 10080 (14 days) for testnet)
      fixedRatePeriod = 10080
      # number of coins issued every block during fixedRatePeriod (75 Ergo)
      fixedRate = 7500000000
      # number of blocks between reward reduction (64800 (90 days) for mainnet, 2160 (3 days) for testnet)
      epochLength = 2160
      # number of coins reward decrease every epochs (3 Ergo)
      oneEpochReduction = 300000000
      # Base16 representation of state roothash after genesis
      afterGenesisStateDigestHex = "7f59edc15f2f6497e763b9627cdb645b4c6d96feb301224269aca2d26b44ef3801"
    }

    # Desired time interval between blocks
    blockInterval = 2m

    # length of an epoch in difficulty recalculation. 1 means difficulty recalculation every block
    epochLength = 256

    # Number of last epochs that will  be used for difficulty recalculation
    useLastEpochs = 8

    # Proof-of-Work algorithm and its parameters. Possible options are "fake" and "equihash".
    powScheme {
      powType = "equihash"
      n = 96 # used by Equihash
      k = 5  # used by Equihash
    }
  }

  wallet {
    seed = "C8FABEC17697FAF29E9887F716BB5004"
  }
}
scorex {
  network {
    bindAddress = "0.0.0.0:9003"
    maxInvObjects = 400
    nodeName = "ergo-testnet1"
    knownPeers = ["209.97.136.204:9003", "209.97.138.187:9003", "209.97.134.210:9003", "88.198.13.202:9003"]
    syncInterval = 15s
    syncStatusRefresh = 30s
    syncIntervalStable = 20s
    syncTimeout = 5s
    syncStatusRefreshStable = 1m
    deliveryTimeout = 8s
    maxDeliveryChecks = 2
    appVersion = 0.2.1
    agentName = "ergoref"
    maxModifiersCacheSize = 512
    maxPacketSize = 2048576
  }
  restApi {
    bindAddress = "0.0.0.0:9052"
  }
}