ergo {
  # Directory to keep data
  directory = ${user.dir}"/ergo/data"

  # Settings for node view holder regime. See papers.yellow.ModifiersProcessing.md
  node {
    # State type.  Possible options are:
    # "utxo" - keep full utxo set, that allows to validate arbitrary block and generate ADProofs
    # "digest" - keep state root hash only and validate transactions via ADProofs
    stateType = "utxo"

    # Download block transactions and verify them (requires BlocksToKeep == 0 if disabled)
    verifyTransactions = true

    # Number of last blocks to keep with transactions and ADproofs, for all other blocks only header will be stored.
    # Keep all blocks from genesis if negative
    blocksToKeep = 1000

    # Download PoPoW proof on node bootstrap
    PoPoWBootstrap = false

    # Minimal suffix size for PoPoW proof (may be pre-defined constant or settings parameter)
    minimalSuffix = 10

    # Is the node is doing mining
    mining = false

    # If true, a node generates blocks being offline. The only really useful case for it probably is to start a new
    # blockchain
    offlineGeneration = false

    # Delay for miner after succesful block creation
    miningDelay = 1s

    mempoolCapacity = 100000

    blacklistCapacity = 100000
  }

  #Chain-specific settings. Change only if you are going to launch a new chain!
  chain {

    monetary {
      # delay between the block mined and a time, when the reward can be spent. ~ 1 day.
      minerRewardDelay = -1000
    }

    # Public keys of founders for tests. Two keys from defaultProver and one random one.
    foundersPubkeys = [
      "0232cb877c399ba9ad6da61a22d0c0b26496024275d6bbb2e08df0b828dce809ac",
      "037b782599c9896ef5caca7ee4529beaba8252197f502559864dc1fcd8588c2b6f",
      "031ded6cf3f53a4a54d7c3cb9276c715ee1059ea424bd6b8a9271c5560455ab91f"
    ]

    # Base16 representation of genesis state roothash
    genesisStateDigestHex = "643963a481d2f7c66de6e83144c30bb1eca7a62f99cdc15d7c36cb0bdf95d8b702"

    # Network address prefix, currently reserved values are 0x00 (money chain mainnet) and 0x10 (16 in decimal,
    # money chain testnet)
    addressPrefix = 16

    # Desired time interval between blocks
    blockInterval = 1m

    # length of an epoch in difficulty recalculation
    epochLength = 100

    //Proof-of-Work algorithm and its parameters. Possible options are "fake" and "autolykos".
    powScheme {
      powType = "fake"
    }

  }

  wallet {
    seed = "C8FABEC17697FAF29E9887F716BB5004006"
    scanningInterval = 1ms
  }
}

scorex {
  restApi {
    apiKeyHash = null
  }
}

akka {
  test {
    timefactor = 3 # duration scale factor to prevent spurious test failures on the heavily loaded CI servers
  }
}
