{"version":3,"sources":["assets/images/logotype_white.svg","utils/constants.js","components/common/MenuList/index.js","store/selectors/app.js","store/selectors/wallet.js","store/slices/walletSlice.js","store/actions/walletActions.js","store/slices/appSlice.js","store/actions/appActions.js","utils/environment.js","api/api.js","utils/toast/index.js","components/Header/ApiKeyModal/ApiKeyModalView.js","components/Header/ApiKeyModal/index.js","components/Header/ApiKeyModal/ApiKeyModalContainer.js","components/Header/WalletStatusModal/index.js","components/common/CopyToClipboard/index.js","components/elements/WalletInitializeForm/index.js","components/elements/RestoreWalletForm/index.js","components/Header/WalletInitModal/index.js","components/Header/HeaderView.js","components/Header/index.js","components/Header/HeaderContainer.js","components/layout/index.js","components/pages/Dashboard/InfoCard/index.js","components/pages/Dashboard/SynchCard/index.js","components/pages/Dashboard/WalletSyncCard/index.js","components/common/ErgoLoader/index.js","components/pages/Dashboard/DashboardView.js","hooks/usePrevious.js","components/pages/Dashboard/DashboardContainer.js","components/pages/Dashboard/index.js","components/pages/Wallet/components/PaymentSendForm/index.js","components/pages/Wallet/components/GetBalanceForm/index.js","components/pages/Wallet/components/GetWalletAddressesForm/index.js","components/pages/Wallet/index.js","router/router.js","store/reducers/rootReducer.js","api/oracleApi.js","store/middlewares/walletMiddleware.js","App.js","store/index.js","index.js"],"names":["module","exports","swaggerInterface","website","explorer","nanoErgInErg","localRouteList","dashboard","href","icon","faChartLine","title","wallet","faExchangeAlt","externalRouteList","constants","faBook","faWpexplorer","faGlobe","withRouter","pathname","location","className","Object","values","map","index","key","clsx","active","to","rel","target","apiKeySelector","createSelector","state","app","apiKey","walletSelector","isWalletUnlockedSelector","isWalletUnlocked","isWalletInitializedSelector","isWalletInitialized","walletStatusDataSelector","walletStatusData","walletBalanceDataSelector","walletBalanceData","ergPriceSelector","ergPrice","createSlice","name","initialState","reducers","setIsWalletUnlocked","payload","setIsWalletInitialized","setWalletStatusData","setWalletBalanceData","setErgPrice","checkWalletStatus","createAction","getWalletBalance","getErgPrice","walletSlice","actions","setApiKey","action","appSlice","nodeApiLink","oracleApiLink","NetworkError","status","message","data","statusText","this","prototype","create","Error","nodeApi","axios","baseURL","environment","timeout","crossDomain","headers","interceptors","response","use","Promise","resolve","error","reject","toastStates","success","text","options","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","bodyClassName","progressClassName","info","ApiKeyModalView","showModal","handleHide","submitForm","handleShow","onClick","renderButton","Modal","show","onHide","centered","initialValues","onSubmit","Header","closeButton","Title","Body","type","placeholder","Footer","ApiKeyModalContainer","connect","dispatch","dispatchSetApiKey","appActions","memo","props","useState","setShowModal","get","api_key","then","trim","customToast","catch","WalletStatusForm","setState","walletUnlock","pass","post","walletLock","submitWalletUnlockForm","setSubmitting","resetForm","setStatus","dispatchSetIsWalletUnlocked","err","errMessage","detail","submitWalletLockForm","confirm","aria-labelledby","isSubmitting","id","htmlFor","disabled","Component","isWalletUnlock","walletActions","CopyToClipboard","startTimer","timerId","setTimeout","showTooltip","onCopy","e","preventDefault","copy","children","handleOnTooltipClose","myRef","React","createRef","ref","faCopy","Overlay","current","placement","Tooltip","clearTimeout","PureComponent","initialFormValues","walletPassword","mnemonicPass","WalletInitializeForm","isShowMnemonic","walletInit","a","handleSubmit","result","msg","mnemonic","role","aria-hidden","walletRestore","String","required","WalletInitModal","dispatchCheckWalletStatus","size","RestoreWalletForm","isApiKeySetted","Navbar","expand","Brand","src","logo","alt","ApiKeyModal","WalletStatusModal","renderWalletForms","HeaderContainer","useEffect","Layout","InfoCard","color","SynchCard","renderActiveSynchronization","faSync","spin","renderCompleteSynchronization","faCheck","renderSynchronizationState","complete","getSynchronizationState","fullHeight","headersHeight","nextProps","nodeInfo","currentSynchState","WalletSyncCard","walletHeight","LoaderLogo","xmlns","width","height","viewBox","fill","d","fillRule","clipRule","DashboardView","faExclamationTriangle","peersCount","bestHeaderId","launchTime","appVersion","isMining","format","Date","getWalletStatus","isUnlocked","balance","Number","toFixed","assets","length","usePrevious","value","useRef","dispatchGetWalletBalance","dispatchGetErgPrice","setNodeInfo","setError","setTimerId","setNodeCurrentState","useCallback","setTimer","newTimerId","setInterval","prevError","clearInterval","DashboardContainer","recipientAddress","amount","PaymentSendForm","isShowTransactionId","paymentSend","address","parseFloat","GetBalanceForm","isShowBalance","getBalance","displayType","thousandSeparator","suffix","GetWalletAddressesForm","isShowWalletAddresses","walletAddresses","getWalletAddresses","event","addr","Wallet","renderState","unlocked","renderWalletUnlockedState","locked","renderWalletLockedState","initialized","renderInitializedState","Router","basename","exact","path","component","Dashboard","combineReducers","reducer","oracleApi","store","next","getState","walletData","isInitialized","transformResponse","Axios","defaults","JSON","parse","latest_price","configure","configureStore","rootReducer","middleware","getDefaultMiddleware","walletMiddleware","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7847d6dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logotype_white.4dcfd639.svg\";","export default {\n  swaggerInterface: '/swagger',\n  website: 'https://ergoplatform.org',\n  explorer: 'https://explorer.ergoplatform.com',\n  nanoErgInErg: 1000000000,\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChartLine,\n  faExchangeAlt,\n  faGlobe,\n  faBook,\n} from '@fortawesome/free-solid-svg-icons'\nimport clsx from 'clsx'\nimport { faWpexplorer } from '@fortawesome/free-brands-svg-icons'\nimport { withRouter, Link } from 'react-router-dom'\nimport constants from '../../../utils/constants'\n\nconst localRouteList = {\n  dashboard: {\n    href: '/',\n    icon: <FontAwesomeIcon icon={faChartLine}></FontAwesomeIcon>,\n    title: 'Dashboard',\n  },\n  wallet: {\n    href: '/wallet',\n    icon: <FontAwesomeIcon icon={faExchangeAlt}></FontAwesomeIcon>,\n    title: 'Wallet',\n  },\n}\n\nconst externalRouteList = {\n  swaggerInterface: {\n    href: constants.swaggerInterface,\n    icon: <FontAwesomeIcon icon={faBook}></FontAwesomeIcon>,\n    title: 'Swagger',\n  },\n  explorer: {\n    href: constants.explorer,\n    icon: <FontAwesomeIcon icon={faWpexplorer}></FontAwesomeIcon>,\n    title: 'Explorer',\n  },\n  website: {\n    href: constants.website,\n    icon: <FontAwesomeIcon icon={faGlobe}></FontAwesomeIcon>,\n    title: 'Website',\n  },\n}\n\nconst MenuList = ({ location: { pathname } }) => {\n  return (\n    <div>\n      <p className=\"h5 pl-3 pt-4\">Menu</p>\n      <hr className=\"mb-0\" />\n      <div className=\"list-group list-group-flush\">\n        {Object.values(localRouteList).map(({ href, icon, title }, index) => (\n          <Link\n            key={title}\n            className={clsx('list-group-item list-group-item-action', {\n              'list-group-item-dark': href === pathname,\n              active: href === pathname,\n              'border-top-0': index === 0,\n            })}\n            to={href}\n          >\n            {icon} {title}\n          </Link>\n        ))}\n      </div>\n      <p className=\"h5 pl-3 pt-4\">External links</p>\n      <hr className=\"mb-0\" />\n      <div className=\"list-group list-group-flush\">\n        {Object.values(externalRouteList).map(\n          ({ href, icon, title }, index) => (\n            <a\n              key={title}\n              className={clsx('list-group-item list-group-item-action', {\n                'border-top-0': index === 0,\n              })}\n              href={href}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {icon} {title}\n            </a>\n          ),\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(MenuList)\n","import { createSelector } from 'redux-starter-kit'\n\nexport const appSelector = state => state.app\n\nexport const apiKeySelector = createSelector(appSelector, app => app.apiKey)\n","import { createSelector } from 'redux-starter-kit'\n\nexport const walletSelector = state => state.wallet\n\nexport const isWalletUnlockedSelector = createSelector(\n  walletSelector,\n  wallet => wallet.isWalletUnlocked,\n)\n\nexport const isWalletInitializedSelector = createSelector(\n  walletSelector,\n  wallet => wallet.isWalletInitialized,\n)\n\nexport const walletStatusDataSelector = createSelector(\n  walletSelector,\n  wallet => wallet.walletStatusData,\n)\n\nexport const walletBalanceDataSelector = createSelector(\n  walletSelector,\n  wallet => wallet.walletBalanceData,\n)\n\nexport const ergPriceSelector = createSelector(\n  walletSelector,\n  wallet => wallet.ergPrice,\n)\n","import { createSlice } from 'redux-starter-kit'\n\nconst initialState = {\n  isWalletUnlocked: null,\n  isWalletInitialized: null,\n  walletStatusData: null,\n  walletBalanceData: null,\n  ergPrice: null,\n}\n\nexport default createSlice({\n  name: 'walletSlice',\n  initialState,\n  reducers: {\n    setIsWalletUnlocked: (state, { payload }) => {\n      state.isWalletUnlocked = payload\n    },\n    setIsWalletInitialized: (state, { payload }) => {\n      state.isWalletInitialized = payload\n    },\n    setWalletStatusData: (state, { payload }) => {\n      state.walletStatusData = payload\n    },\n    setWalletBalanceData: (state, { payload }) => {\n      state.walletBalanceData = payload\n    },\n    setErgPrice: (state, { payload }) => {\n      state.ergPrice = payload\n    },\n  },\n})\n","import { createAction } from 'redux-starter-kit'\nimport walletSlice from '../slices/walletSlice'\n\nconst checkWalletStatus = createAction('checkWalletStatus')\nconst getWalletBalance = createAction('getWalletBalance')\nconst getErgPrice = createAction('getErgPrice')\n\nexport default {\n  ...walletSlice.actions,\n  checkWalletStatus,\n  getWalletBalance,\n  getErgPrice,\n}\n","import { createSlice } from 'redux-starter-kit'\n\nconst initialState = {\n  apiKey: '',\n}\n\nexport default createSlice({\n  name: 'appSlice',\n  initialState,\n  reducers: {\n    setApiKey: (state, action) => {\n      state.apiKey = action.payload\n    },\n  },\n})\n","import appSlice from '../slices/appSlice'\n\nexport default {\n  ...appSlice.actions,\n}\n","const appConfig = () => {\n  return {\n    nodeApiLink: '/',\n    oracleApiLink: 'https://erg-usd-ergo-oracle.emurgo.io',\n  }\n}\n\nexport default {\n  ...appConfig(),\n}\n","import axios from 'axios'\nimport environment from '../utils/environment'\n\nfunction NetworkError({ status, message, data, statusText }) {\n  this.name = 'NetworkError'\n  this.message = message || statusText\n  this.status = status\n  this.data = data\n}\n\nNetworkError.prototype = Object.create(Error.prototype)\n\nconst nodeApi = axios.create({\n  baseURL: environment.nodeApiLink,\n  timeout: 1000 * 10,\n  crossDomain: true,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\nnodeApi.interceptors.response.use(\n  response => Promise.resolve(response),\n  error => Promise.reject(new NetworkError(error.response || error)),\n)\n\nexport default nodeApi\n","import { toast } from 'react-toastify'\nimport './index.scss'\n\nconst toastStates = {\n  success: (text, options) =>\n    toast.success(text, {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      className: 'n-toast n-toast--success',\n      bodyClassName: 'n-toast__body',\n      progressClassName: 'n-toast__progress--success',\n      ...options,\n    }),\n  error: (text, options) =>\n    toast.error(text, {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      className: 'n-toast n-toast--error',\n      bodyClassName: 'n-toast__body',\n      progressClassName: 'n-toast__progress--error',\n      ...options,\n    }),\n  info: toast.info,\n}\n\nexport default (state, text, options) =>\n  toastStates[state]\n    ? toastStates[state](text, options)\n    : new Error(`Bad toast state`)\n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Formik, Form, Field } from 'formik'\n\nconst renderButton = (apiKey, handleShow) => {\n  if (apiKey === '') {\n    return (\n      <button onClick={handleShow} className=\"btn btn-primary\">\n        Set API key\n      </button>\n    )\n  }\n\n  return (\n    <button onClick={handleShow} className=\"btn btn-outline-primary\">\n      Update API key\n    </button>\n  )\n}\n\nconst ApiKeyModalView = ({\n  showModal,\n  handleHide,\n  submitForm,\n  apiKey,\n  handleShow,\n}) => {\n  return (\n    <div>\n      {renderButton(apiKey, handleShow)}\n      <Modal show={showModal} onHide={() => handleHide()} centered>\n        <Formik initialValues={{ apiKey }} onSubmit={submitForm}>\n          {() => (\n            <Form>\n              <Modal.Header closeButton>\n                <Modal.Title>Authorization</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <p className=\"text\">Set API key to access Node requests</p>\n                <div className=\"input-group\">\n                  <Field\n                    type=\"text\"\n                    name=\"apiKey\"\n                    className=\"form-control\"\n                    placeholder=\"Enter API key\"\n                  />\n                </div>\n              </Modal.Body>\n\n              <Modal.Footer>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary\"\n                  onClick={handleHide}\n                >\n                  Close\n                </button>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Save changes\n                </button>\n              </Modal.Footer>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </div>\n  )\n}\n\nexport default ApiKeyModalView\n","import ApiKeyModalContainer from './ApiKeyModalContainer'\n\nexport default ApiKeyModalContainer\n","import React, { memo, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { apiKeySelector } from '../../../store/selectors/app'\nimport appActions from '../../../store/actions/appActions'\nimport nodeApi from '../../../api/api'\nimport customToast from '../../../utils/toast'\nimport ApiKeyModalView from './ApiKeyModalView'\n\nconst mapStateToProps = state => ({\n  apiKey: apiKeySelector(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSetApiKey: apiKey => dispatch(appActions.setApiKey(apiKey)),\n})\n\nconst ApiKeyModalContainer = props => {\n  const { dispatchSetApiKey, apiKey } = props\n\n  const [showModal, setShowModal] = useState(false)\n\n  const handleShow = () => {\n    setShowModal(true)\n  }\n\n  const handleHide = () => {\n    setShowModal(false)\n  }\n\n  const submitForm = values => {\n    // Check API key for random get method\n    nodeApi\n      .get('/wallet/status', {\n        headers: {\n          api_key: values.apiKey,\n        },\n      })\n      .then(() => {\n        dispatchSetApiKey(values.apiKey.trim())\n        customToast('success', 'API key is set successfully')\n        handleHide()\n      })\n      .catch(() => {\n        customToast('error', 'Bad API key')\n      })\n  }\n\n  return (\n    <ApiKeyModalView\n      showModal={showModal}\n      apiKey={apiKey}\n      handleHide={handleHide}\n      submitForm={submitForm}\n      handleShow={handleShow}\n    />\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(memo(ApiKeyModalContainer))\n","import React, { Component, memo } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { Formik, Field, Form } from 'formik'\nimport { connect } from 'react-redux'\nimport { isWalletUnlockedSelector } from '../../../store/selectors/wallet'\nimport walletActions from '../../../store/actions/walletActions'\nimport { apiKeySelector } from '../../../store/selectors/app'\nimport customToast from '../../../utils/toast'\nimport nodeApi from '../../../api/api'\n\nconst mapStateToProps = state => ({\n  isWalletUnlocked: isWalletUnlockedSelector(state),\n  apiKey: apiKeySelector(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSetIsWalletUnlocked: isWalletUnlock =>\n    dispatch(walletActions.setIsWalletUnlocked(isWalletUnlock)),\n})\n\nclass WalletStatusForm extends Component {\n  state = {\n    showModal: false,\n  }\n\n  handleShow = () => {\n    this.setState({ showModal: true })\n  }\n\n  handleHide = () => {\n    this.setState({ showModal: false })\n  }\n\n  walletUnlock = pass =>\n    nodeApi.post(\n      '/wallet/unlock',\n      { pass },\n      {\n        headers: {\n          api_key: this.props.apiKey,\n        },\n      },\n    )\n\n  walletLock = () =>\n    nodeApi.get('/wallet/lock', {\n      headers: {\n        api_key: this.props.apiKey,\n      },\n    })\n\n  submitWalletUnlockForm = (\n    { pass },\n    { setSubmitting, resetForm, setStatus },\n  ) => {\n    setStatus({ status: 'submitting' })\n    this.walletUnlock(pass)\n      .then(() => {\n        resetForm({ pass: '' })\n        customToast('success', 'Your wallet is unlocked successfully')\n        this.props.dispatchSetIsWalletUnlocked(true)\n        this.handleHide()\n      })\n      .catch(err => {\n        const errMessage = err.data ? err.data.detail : err.message\n        customToast('error', errMessage)\n        setSubmitting(false)\n      })\n  }\n\n  submitWalletLockForm = () => {\n    // eslint-disable-next-line\n    if (confirm('Are you sure want to lock wallet?')) {\n      this.walletLock()\n        .then(() => {\n          customToast('success', 'Your wallet is locked successfully')\n          this.props.dispatchSetIsWalletUnlocked(false)\n        })\n        .catch(err => {\n          const errMessage = err.data ? err.data.detail : err.message\n          customToast('error', errMessage)\n        })\n    }\n  }\n\n  renderButton = () => {\n    if (!this.props.isWalletUnlocked) {\n      return (\n        <button onClick={this.handleShow} className=\"btn btn-info\">\n          Unlock wallet\n        </button>\n      )\n    }\n\n    return (\n      <button\n        onClick={this.submitWalletLockForm}\n        className=\"btn btn-outline-info\"\n      >\n        Lock wallet\n      </button>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderButton()}\n        <Modal\n          show={this.state.showModal}\n          onHide={() => this.handleHide()}\n          centered\n          aria-labelledby=\"example-custom-modal-styling-title\"\n        >\n          <Formik\n            initialValues={{ pass: '' }}\n            onSubmit={this.submitWalletUnlockForm}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"example-custom-modal-styling-title\">\n                    Unlock wallet form\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"wallet-password-input\">\n                      Wallet password *\n                    </label>\n                    <Field\n                      name=\"pass\"\n                      type=\"password\"\n                      id=\"wallet-password-input\"\n                      className=\"form-control\"\n                      placeholder=\"Enter wallet password\"\n                    />\n                    <small\n                      id=\"walletPasswordHelp\"\n                      className=\"form-text text-muted\"\n                    >\n                      * If you have it <b>or leave field empty</b>\n                    </small>\n                  </div>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <button\n                    className=\"btn btn-outline-secondary\"\n                    onClick={this.handleHide}\n                  >\n                    Close\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    disabled={isSubmitting}\n                  >\n                    Save changes\n                  </button>\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(memo(WalletStatusForm))\n","import React from 'react'\nimport copy from 'clipboard-copy'\nimport { Overlay, Tooltip } from 'react-bootstrap'\nimport { faCopy } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass CopyToClipboard extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.myRef = React.createRef()\n    this.state = { showTooltip: false }\n  }\n\n  render() {\n    return (\n      <>\n        <a\n          href=\"#copyClipboard\"\n          ref={this.myRef}\n          onClick={this.onCopy}\n          className=\"font-weight-bold text-decoration-none\"\n        >\n          {this.props.children}\n          &nbsp;\n          <FontAwesomeIcon icon={faCopy} />\n        </a>\n        <Overlay\n          target={this.myRef.current}\n          show={this.state.showTooltip}\n          placement=\"right\"\n        >\n          <Tooltip>Copied!</Tooltip>\n        </Overlay>\n      </>\n    )\n  }\n\n  startTimer = () => {\n    const timerId = setTimeout(\n      () => this.setState({ showTooltip: false }),\n      1500,\n    )\n    this.setState({ timerId })\n  }\n\n  onCopy = e => {\n    e.preventDefault()\n    copy(this.props.children)\n    this.setState({ showTooltip: true })\n    this.startTimer()\n  }\n\n  handleOnTooltipClose = () => {\n    this.setState({ showTooltip: false })\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.state.timerId)\n  }\n}\n\nexport default CopyToClipboard\n","import React, { Component, memo } from 'react'\nimport { Formik, Field, Form } from 'formik'\nimport nodeApi from '../../../api/api'\nimport CopyToClipboard from '../../common/CopyToClipboard'\nimport customToast from '../../../utils/toast'\n\nconst initialFormValues = {\n  walletPassword: '',\n  mnemonicPass: '',\n}\n\nclass WalletInitializeForm extends Component {\n  state = { isShowMnemonic: false }\n\n  walletInit = async ({ walletPassword, mnemonicPass }) => {\n    const { data } = await nodeApi.post(\n      '/wallet/init',\n      { pass: walletPassword, mnemonicPass },\n      {\n        headers: {\n          api_key: this.props.apiKey,\n        },\n      },\n    )\n\n    return data\n  }\n\n  handleSubmit = (values, { setSubmitting, resetForm, setStatus }) => {\n    setStatus({ status: 'submitting' })\n    this.walletInit(values)\n      .then(result => {\n        resetForm(initialFormValues)\n        setStatus({\n          state: 'success',\n          msg: (\n            <>\n              Your wallet successfully initialized. Please, save your mnemonic -{' '}\n              <CopyToClipboard>{result.mnemonic}</CopyToClipboard>\n            </>\n          ),\n        })\n        this.setState({ isShowMnemonic: true })\n      })\n      .catch(err => {\n        const errMessage = err.data ? err.data.detail : err.message\n        customToast('error', errMessage)\n        setSubmitting(false)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"card bg-white p-4 mb-4\">\n        <h2 className=\"h5 mb-3\">Initialize wallet</h2>\n        <Formik initialValues={initialFormValues} onSubmit={this.handleSubmit}>\n          {({ status, isSubmitting }) => (\n            <Form>\n              {status && status.state === 'error' && (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {status.msg}\n                </div>\n              )}\n              {status &&\n                status.state === 'success' &&\n                this.state.isShowMnemonic && (\n                  <div className=\"alert alert-success alert-dismissible\">\n                    <button\n                      type=\"button\"\n                      className=\"close\"\n                      onClick={() => this.setState({ isShowMnemonic: false })}\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                    {status.msg}\n                  </div>\n                )}\n              <div className=\"form-group\">\n                <label htmlFor=\"wallet-password-input\">Wallet password</label>\n                <Field\n                  name=\"walletPassword\"\n                  type=\"password\"\n                  id=\"wallet-password-input\"\n                  className=\"form-control\"\n                  placeholder=\"Enter wallet password\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"mnemonic-password-input\">\n                  Mnemonic password\n                </label>\n                <Field\n                  name=\"mnemonicPass\"\n                  type=\"password\"\n                  id=\"mnemonic-password-input\"\n                  className=\"form-control\"\n                  placeholder=\"Enter mnemonic password\"\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting}\n              >\n                Send\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    )\n  }\n}\n\nexport default memo(WalletInitializeForm)\n","import React, { Component, memo } from 'react'\nimport { Formik, Field, Form } from 'formik'\nimport nodeApi from '../../../api/api'\nimport customToast from '../../../utils/toast'\n\nconst initialFormValues = {\n  walletPassword: '',\n  mnemonicPass: '',\n  mnemonic: '',\n}\n\nclass WalletInitializeForm extends Component {\n  walletRestore = async ({\n    walletPassword,\n    mnemonicPass = '',\n    mnemonic = '',\n  }) => {\n    if (!mnemonic || !String(mnemonic).trim()) {\n      throw Error('Need to set mnemonic')\n    }\n\n    return nodeApi.post(\n      '/wallet/restore',\n      { pass: walletPassword, mnemonicPass, mnemonic },\n      {\n        headers: {\n          api_key: this.props.apiKey,\n        },\n      },\n    )\n  }\n\n  handleSubmit = (values, { setSubmitting, resetForm, setStatus }) => {\n    setStatus({ status: 'submitting' })\n    this.walletRestore(values)\n      .then(() => {\n        resetForm(initialFormValues)\n        customToast('success', 'Your wallet successfully re-stored')\n      })\n      .catch(err => {\n        const errMessage = err.data ? err.data.detail : err.message\n        customToast('error', errMessage)\n        setSubmitting(false)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"card bg-white p-4 mb-4\">\n        <h2 className=\"h5 mb-3\">Re-store wallet</h2>\n        <Formik initialValues={initialFormValues} onSubmit={this.handleSubmit}>\n          {({ status, isSubmitting }) => (\n            <Form>\n              {status && status.state === 'error' && (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {status.msg}\n                </div>\n              )}\n              {status && status.state === 'success' && (\n                <div className=\"alert alert-success\">{status.msg}</div>\n              )}\n              <div className=\"form-group\">\n                <label htmlFor=\"restore-mnemonic-input\">Mnemonic</label>\n                <Field\n                  name=\"mnemonic\"\n                  type=\"text\"\n                  id=\"restore-mnemonic-input\"\n                  className=\"form-control\"\n                  placeholder=\"Enter mnemonic\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"restore-wallet-password-input\">\n                  Wallet password\n                </label>\n                <Field\n                  name=\"walletPassword\"\n                  type=\"password\"\n                  id=\"restore-wallet-password-input\"\n                  className=\"form-control\"\n                  placeholder=\"Enter wallet password\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"restore-mnemonic-password-input\">\n                  Mnemonic password\n                </label>\n                <Field\n                  name=\"mnemonicPass\"\n                  type=\"password\"\n                  id=\"restore-mnemonic-password-input\"\n                  className=\"form-control\"\n                  placeholder=\"Enter mnemonic password\"\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting}\n              >\n                Send\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    )\n  }\n}\n\nexport default memo(WalletInitializeForm)\n","import React, { Component, memo } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { connect } from 'react-redux'\nimport { apiKeySelector } from '../../../store/selectors/app'\nimport appActions from '../../../store/actions/appActions'\nimport WalletInitializeForm from '../../elements/WalletInitializeForm'\nimport RestoreWalletForm from '../../elements/RestoreWalletForm'\nimport walletActions from '../../../store/actions/walletActions'\n\nconst mapStateToProps = state => ({\n  apiKey: apiKeySelector(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchCheckWalletStatus: () => dispatch(walletActions.checkWalletStatus()),\n  dispatchSetApiKey: apiKey => dispatch(appActions.setApiKey(apiKey)),\n})\n\nclass WalletInitModal extends Component {\n  state = {\n    showModal: false,\n  }\n\n  handleShow = () => {\n    this.setState({ showModal: true })\n  }\n\n  handleHide = () => {\n    this.props.dispatchCheckWalletStatus()\n    this.setState({ showModal: false })\n  }\n\n  renderButton = () => {\n    return (\n      <button onClick={this.handleShow} className=\"btn btn-primary\">\n        Initialize wallet\n      </button>\n    )\n  }\n\n  render() {\n    const { apiKey } = this.props\n\n    return (\n      <div>\n        {this.renderButton()}\n        <Modal\n          show={this.state.showModal}\n          onHide={() => this.handleHide()}\n          centered\n          size=\"lg\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n              Wallet initialization\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"row\">\n            <div className=\"col-6\">\n              <WalletInitializeForm apiKey={apiKey} />\n            </div>\n            <div className=\"col-6\">\n              <RestoreWalletForm apiKey={apiKey} />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={this.handleHide}\n            >\n              Close\n            </button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(memo(WalletInitModal))\n","import React, { memo } from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport ApiKeyModal from './ApiKeyModal'\nimport WalletStatusModal from './WalletStatusModal'\nimport WalletInitModal from './WalletInitModal'\nimport logo from '../../assets/images/logotype_white.svg'\n\nconst renderWalletForms = isWalletInitialized => {\n  if (isWalletInitialized === null) {\n    return <></>\n  }\n\n  if (isWalletInitialized) {\n    return (\n      <div className=\"ml-4\">\n        <WalletStatusModal />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"ml-4\">\n      <WalletInitModal />\n    </div>\n  )\n}\n\nconst HeaderView = ({ isApiKeySetted, isWalletInitialized }) => {\n  return (\n    <Navbar className=\"navbar-background\" expand=\"lg\">\n      <Navbar.Brand className=\"navbar-brand\">\n        <Link to=\"/\">\n          <img src={logo} alt=\"logotype\" className=\"logotype\" />\n        </Link>\n      </Navbar.Brand>\n      <div className=\"ml-4\">\n        <ApiKeyModal />\n      </div>\n      {isApiKeySetted && renderWalletForms(isWalletInitialized)}\n    </Navbar>\n  )\n}\n\nexport default memo(HeaderView)\n","import HeaderContainer from './HeaderContainer'\n\nexport default HeaderContainer\n","import React, { memo, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { apiKeySelector } from '../../store/selectors/app'\nimport { isWalletInitializedSelector } from '../../store/selectors/wallet'\nimport walletActions from '../../store/actions/walletActions'\nimport HeaderView from './HeaderView'\n\nconst mapStateToProps = state => ({\n  apiKey: apiKeySelector(state),\n  isWalletInitialized: isWalletInitializedSelector(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchCheckWalletStatus: () => dispatch(walletActions.checkWalletStatus()),\n})\n\nconst HeaderContainer = props => {\n  const { apiKey, dispatchCheckWalletStatus, isWalletInitialized } = props\n\n  useEffect(() => {\n    if (apiKey !== '') {\n      dispatchCheckWalletStatus()\n    }\n  }, [apiKey, dispatchCheckWalletStatus])\n\n  const isApiKeySetted = apiKey !== ''\n\n  return (\n    <HeaderView\n      isApiKeySetted={isApiKeySetted}\n      isWalletInitialized={isWalletInitialized}\n    />\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(memo(HeaderContainer))\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport MenuList from '../common/MenuList'\nimport './index.scss'\nimport Header from '../Header'\n\nclass Layout extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"sidebar\">\n          <MenuList />\n        </div>\n        <main className=\"main-container\">\n          <div className=\"content\">{this.props.children}</div>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Layout)\n","import React from 'react'\nimport clsx from 'clsx'\nimport './index.scss'\n\nconst InfoCard = ({ color, children, className }) => {\n  return (\n    <div\n      className={clsx(\n        {\n          'info-card': true,\n          'info-card--green': color === 'green',\n          'info-card--orange': color === 'orange',\n        },\n        className,\n      )}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default InfoCard\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSync, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport InfoCard from '../InfoCard'\n\nexport default class SynchCard extends Component {\n  renderActiveSynchronization = () => (\n    <>\n      <p className=\"info-card__title\">Synchronization state</p>\n      <p className=\"info-card__label text-warning\">\n        <FontAwesomeIcon icon={faSync} spin></FontAwesomeIcon> Active\n        synchronization\n      </p>\n    </>\n  )\n\n  renderCompleteSynchronization = () => (\n    <>\n      <p className=\"info-card__title\">Synchronization state</p>\n      <p className=\"info-card__label text-success\">\n        <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon> Node is synced\n      </p>\n    </>\n  )\n\n  renderSynchronizationState = state =>\n    ({\n      active: this.renderActiveSynchronization,\n      complete: this.renderCompleteSynchronization,\n    }[state])\n\n  getSynchronizationState = ({ fullHeight, headersHeight }) => {\n    if (\n      fullHeight !== null &&\n      headersHeight !== null &&\n      fullHeight === headersHeight\n    ) {\n      return 'complete'\n    }\n\n    return 'active'\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (\n      this.getSynchronizationState(nextProps) !==\n      this.getSynchronizationState(this.props.nodeInfo)\n    ) {\n      return true\n    }\n\n    return false\n  }\n\n  render() {\n    const currentSynchState = this.getSynchronizationState(this.props.nodeInfo)\n    return (\n      <InfoCard className={this.props.className}>\n        {this.renderSynchronizationState(currentSynchState)()}\n      </InfoCard>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSync, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport InfoCard from '../InfoCard'\n\nexport default class WalletSyncCard extends Component {\n  renderActiveSynchronization = () => (\n    <>\n      <p className=\"info-card__title\">Synchronization state</p>\n      <p className=\"info-card__label text-warning\">\n        <FontAwesomeIcon icon={faSync} spin></FontAwesomeIcon> Active\n        synchronization\n      </p>\n    </>\n  )\n\n  renderCompleteSynchronization = () => (\n    <>\n      <p className=\"info-card__title\">Synchronization state</p>\n      <p className=\"info-card__label text-success\">\n        <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon> Wallet is synced\n      </p>\n    </>\n  )\n\n  renderSynchronizationState = state =>\n    ({\n      active: this.renderActiveSynchronization,\n      complete: this.renderCompleteSynchronization,\n    }[state])\n\n  getSynchronizationState = (walletStatusData, headersHeight) => {\n    if (\n      walletStatusData.walletHeight !== null &&\n      headersHeight !== null &&\n      walletStatusData.walletHeight === headersHeight\n    ) {\n      return 'complete'\n    }\n\n    return 'active'\n  }\n\n  render() {\n    const { walletStatusData, headersHeight } = this.props\n    const currentSynchState = this.getSynchronizationState(\n      walletStatusData,\n      headersHeight,\n    )\n    return (\n      <InfoCard className={this.props.className}>\n        {this.renderSynchronizationState(currentSynchState)()}\n      </InfoCard>\n    )\n  }\n}\n","import React from 'react'\nimport './index.scss'\n\nconst LoaderLogo = () => {\n  return (\n    <div className=\"ergo-loader\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"59\"\n        height=\"59\"\n        viewBox=\"0 0 59 59\"\n        fill=\"none\"\n      >\n        <path\n          d=\"M29.8011 59C29.6868 59 29.5679 58.988 29.452 58.9654C29.3377 58.9443 29.2234 58.9097 29.115 58.8661L9.47084 50.981C9.24366 50.8892 9.03902 50.7554 8.8675 50.5869C8.69749 50.4199 8.55905 50.2182 8.46427 49.9926L0.148981 30.5258C0.100837 30.4145 0.0646582 30.2987 0.0390817 30.1798C0.0150097 30.064 0.00146924 29.9436 0.00146924 29.8218L0 29.7992C0.0015045 29.6804 0.012033 29.563 0.0346005 29.4501C0.057168 29.3358 0.0902552 29.2215 0.13539 29.1116L8.02049 9.47043C8.11076 9.24325 8.24618 9.03864 8.41468 8.86562C8.58168 8.69561 8.78324 8.55717 9.00892 8.46239L28.4741 0.148566C28.5869 0.100422 28.7028 0.0643173 28.8202 0.0387408C28.9375 0.0146689 29.0594 0.00112837 29.1812 0.00112837C29.1842 -0.000376124 29.2114 -0.000376124 29.2144 0.00112837C29.3302 0.00112837 29.4461 0.0131614 29.5559 0.0357289C29.6687 0.0567919 29.7786 0.0898761 29.8884 0.133507L49.5311 8.0186C49.7583 8.11038 49.9629 8.24422 50.1344 8.41273C50.3059 8.57973 50.4428 8.78136 50.5391 9.00703L58.853 28.4707C58.9493 28.6964 58.9989 28.9371 59.0019 29.1778C59.0034 29.417 58.9583 29.6578 58.8665 29.885L50.9814 49.5277C50.8911 49.7549 50.7558 49.9594 50.5873 50.131C50.4203 50.3025 50.2186 50.4409 49.9944 50.5357L30.5293 58.8496C30.4134 58.8992 30.2946 58.9368 30.1742 58.9608C30.0478 58.9864 29.923 59 29.8011 59V59ZM12.6559 46.7203L29.7635 53.5868L46.7177 46.3472L53.5857 29.2395L46.346 12.2868L29.2384 5.41732L12.2812 12.6599L5.41318 29.7676L12.6559 46.7203V46.7203Z\"\n          fill=\"black\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M27.6272 37.0656H39.0463V42.372H19.9558V37.5485L27.4677 29.2332L19.9919 21.4429V16.606H39.0463V21.9108H27.871L34.7991 29.167L27.6272 37.0656Z\"\n          fill=\"black\"\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default LoaderLogo\n","import React, { Fragment } from 'react'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { format } from 'date-fns'\nimport InfoCard from './InfoCard'\nimport SynchCard from './SynchCard'\nimport WalletSyncCard from './WalletSyncCard'\nimport LoaderLogo from '../../common/ErgoLoader/index'\n\nconst getWalletStatus = isWalletInitialized => {\n  if (!isWalletInitialized) {\n    return 'Not initialized'\n  }\n\n  return 'Initialized'\n}\n\nconst DashboardView = ({\n  error,\n  nodeInfo,\n  isWalletInitialized,\n  walletStatusData,\n  walletBalanceData,\n  ergPrice,\n}) => {\n  if (error !== null) {\n    return (\n      <Fragment>\n        <div className=\"container-fluid vh-100 d-flex align-items-center justify-content-center\">\n          <h3 className=\"text-danger\">\n            <FontAwesomeIcon icon={faExclamationTriangle}></FontAwesomeIcon>\n            &nbsp;\n            {error}\n          </h3>\n        </div>\n      </Fragment>\n    )\n  }\n\n  if (nodeInfo === null) {\n    return (\n      <Fragment>\n        <div className=\"container-fluid vh-100 d-flex align-items-center justify-content-center\">\n          <LoaderLogo></LoaderLogo>\n        </div>\n      </Fragment>\n    )\n  }\n\n  const {\n    peersCount,\n    bestHeaderId,\n    launchTime,\n    fullHeight,\n    appVersion,\n    isMining,\n  } = nodeInfo\n\n  return (\n    <Fragment>\n      <div className=\"dashboard\">\n        <h2 className=\"dashboard__title\">Node Information</h2>\n        <div className=\"dashboard__container\">\n          <div className=\"dashboard__item\">\n            <InfoCard className=\"card rounded-0 shadow-none\">\n              <p className=\"info-card__title\">Version</p>\n              <p className=\"info-card__label\">{appVersion}</p>\n            </InfoCard>\n          </div>\n          <div className=\"dashboard__item\">\n            <SynchCard nodeInfo={nodeInfo}></SynchCard>\n          </div>\n          <div className=\"dashboard__item\">\n            <InfoCard className=\"rounded-0 shadow-none\">\n              <p className=\"info-card__title\">Started at</p>\n              <p className=\"info-card__label\">\n                {format(new Date(launchTime), 'MM-dd-yyyy HH:mm:ss')}\n              </p>\n            </InfoCard>\n          </div>\n          {fullHeight === null ? null : (\n            <div className=\"dashboard__item\">\n              <InfoCard className=\"rounded-0 shadow-none\">\n                <p className=\"info-card__title\">Current height</p>\n                <p className=\"info-card__label\">{fullHeight}</p>\n              </InfoCard>\n            </div>\n          )}\n          {bestHeaderId === null ? null : (\n            <div className=\"dashboard__item\">\n              <InfoCard className=\"rounded-0 shadow-none\">\n                <p className=\"info-card__title\">Best block id</p>\n                <p className=\"info-card__label\">{bestHeaderId}</p>\n              </InfoCard>\n            </div>\n          )}\n          <div className=\"dashboard__item\">\n            <InfoCard className=\"rounded-0 shadow-none\">\n              <p className=\"info-card__title\">Mining enabled</p>\n              <p className=\"info-card__label\">{isMining ? 'Yes' : 'No'}</p>\n            </InfoCard>\n          </div>\n          <div className=\"dashboard__item\">\n            <InfoCard className=\"rounded-0 shadow-none\">\n              <p className=\"info-card__title\">Peers connected</p>\n              <p className=\"info-card__label\">{peersCount}</p>\n            </InfoCard>\n          </div>\n        </div>\n      </div>\n      {ergPrice && (\n        <div className=\"dashboard\">\n          <h2 className=\"dashboard__title\">ERG Information</h2>\n          <div className=\"dashboard__container\">\n            <div className=\"dashboard__item\">\n              <InfoCard className=\"rounded-0 shadow-none\">\n                <p className=\"info-card__title\">\n                  ERG price in $ <br />\n                  (based on oracle pool data)\n                </p>\n                <p className=\"info-card__label\">{ergPrice}</p>\n              </InfoCard>\n            </div>\n          </div>\n        </div>\n      )}\n      {walletStatusData && (\n        <div className=\"dashboard\">\n          <h2 className=\"dashboard__title\">Wallet Information</h2>\n          <div className=\"dashboard__container\">\n            <div className=\"dashboard__item\">\n              <InfoCard className=\"rounded-0 shadow-none\">\n                <p className=\"info-card__title\">Initialization state</p>\n                <p className=\"info-card__label\">\n                  {getWalletStatus(isWalletInitialized)}\n                </p>\n              </InfoCard>\n            </div>\n            <div className=\"dashboard__item\">\n              <InfoCard className=\"rounded-0 shadow-none\">\n                <p className=\"info-card__title\">Lock state</p>\n                <p className=\"info-card__label\">\n                  {walletStatusData.isUnlocked ? 'Unlocked' : 'Locked'}\n                </p>\n              </InfoCard>\n            </div>\n            <div className=\"dashboard__item\">\n              <WalletSyncCard\n                walletStatusData={walletStatusData}\n                headersHeight={nodeInfo.headersHeight}\n              />\n            </div>\n            {walletBalanceData && (\n              <div className=\"dashboard__item\">\n                <InfoCard className=\"rounded-0 shadow-none\">\n                  <p className=\"info-card__title\">Balance</p>\n                  <p className=\"info-card__label\">\n                    {walletBalanceData.balance} ERG{' '}\n                    {ergPrice &&\n                      `~ $${Number(\n                        ergPrice * walletBalanceData.balance,\n                      ).toFixed(2)}`}\n                  </p>\n                </InfoCard>\n              </div>\n            )}\n            {walletBalanceData && (\n              <div className=\"dashboard__item\">\n                <InfoCard className=\"rounded-0 shadow-none\">\n                  <p className=\"info-card__title\">Assets quantity</p>\n                  <p className=\"info-card__label\">\n                    {Object.values(walletBalanceData.assets).length || '0'}\n                  </p>\n                </InfoCard>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </Fragment>\n  )\n}\n\nexport default DashboardView\n","import { useEffect, useRef } from 'react'\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n\nexport default usePrevious\n","import React, { useState, useEffect, useCallback, memo } from 'react'\nimport { connect } from 'react-redux'\nimport nodeApi from '../../../api/api'\nimport DashboardView from './DashboardView'\nimport {\n  isWalletInitializedSelector,\n  isWalletUnlockedSelector,\n  walletStatusDataSelector,\n  walletBalanceDataSelector,\n  ergPriceSelector,\n} from '../../../store/selectors/wallet'\nimport { apiKeySelector } from '../../../store/selectors/app'\nimport usePrevious from '../../../hooks/usePrevious'\nimport walletActions from '../../../store/actions/walletActions'\n\nconst mapStateToProps = state => ({\n  apiKey: apiKeySelector(state),\n  isWalletInitialized: isWalletInitializedSelector(state),\n  isWalletUnlocked: isWalletUnlockedSelector(state),\n  walletStatusData: walletStatusDataSelector(state),\n  walletBalanceData: walletBalanceDataSelector(state),\n  ergPrice: ergPriceSelector(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchCheckWalletStatus: () => dispatch(walletActions.checkWalletStatus()),\n  dispatchGetWalletBalance: () => dispatch(walletActions.getWalletBalance()),\n  dispatchGetErgPrice: () => dispatch(walletActions.getErgPrice()),\n})\n\nconst DashboardContainer = props => {\n  const {\n    isWalletInitialized,\n    isWalletUnlocked,\n    apiKey,\n    dispatchCheckWalletStatus,\n    dispatchGetWalletBalance,\n    dispatchGetErgPrice,\n    walletStatusData,\n    walletBalanceData,\n    ergPrice,\n  } = props\n\n  const [nodeInfo, setNodeInfo] = useState(null)\n  const [error, setError] = useState(null)\n  const [timerId, setTimerId] = useState(null)\n\n  const getNodeCurrentState = () => nodeApi.get('/info')\n\n  const setNodeCurrentState = useCallback(async () => {\n    try {\n      const { data } = await getNodeCurrentState()\n\n      setNodeInfo(data)\n      setError(null)\n    } catch {\n      setError('Node connection is lost.')\n    }\n  }, [])\n\n  const setTimer = useCallback(() => {\n    const newTimerId = setInterval(() => {\n      setNodeCurrentState()\n      dispatchGetErgPrice()\n\n      if (apiKey) {\n        dispatchCheckWalletStatus()\n        dispatchGetWalletBalance()\n      }\n    }, 2000)\n\n    setTimerId(newTimerId)\n  }, [\n    apiKey,\n    dispatchCheckWalletStatus,\n    dispatchGetErgPrice,\n    dispatchGetWalletBalance,\n    setNodeCurrentState,\n  ])\n\n  const prevError = usePrevious(error)\n  useEffect(() => {\n    if (prevError && prevError !== error) {\n      dispatchCheckWalletStatus()\n      dispatchGetWalletBalance()\n      dispatchGetErgPrice()\n    }\n  }, [\n    dispatchCheckWalletStatus,\n    dispatchGetErgPrice,\n    dispatchGetWalletBalance,\n    error,\n    prevError,\n  ])\n\n  useEffect(() => {\n    setNodeCurrentState()\n    dispatchGetErgPrice()\n\n    if (apiKey) {\n      dispatchCheckWalletStatus()\n      dispatchGetWalletBalance()\n    }\n\n    setTimer()\n    // eslint-disable-next-line\n  }, [apiKey])\n\n  useEffect(\n    () => () => {\n      clearInterval(timerId)\n    },\n    [timerId, apiKey],\n  )\n\n  return (\n    <DashboardView\n      error={error}\n      nodeInfo={nodeInfo}\n      isWalletInitialized={isWalletInitialized}\n      isWalletUnlocked={isWalletUnlocked}\n      apiKey={apiKey}\n      walletStatusData={walletStatusData}\n      walletBalanceData={walletBalanceData}\n      ergPrice={ergPrice}\n    />\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(memo(DashboardContainer))\n","import DashboardContainer from './DashboardContainer'\nimport './index.scss'\n\nexport default DashboardContainer\n","import React, { PureComponent } from 'react'\nimport { Formik, Field, Form } from 'formik'\nimport nodeApi from '../../../../../api/api'\nimport customToast from '../../../../../utils/toast'\nimport CopyToClipboard from '../../../../common/CopyToClipboard'\nimport constants from '../../../../../utils/constants'\n\nconst initialFormValues = {\n  recipientAddress: '',\n  amount: '',\n}\n\nclass PaymentSendForm extends PureComponent {\n  state = {\n    isShowTransactionId: false,\n  }\n\n  paymentSend = ({ recipientAddress, amount }) =>\n    nodeApi.post(\n      '/wallet/payment/send',\n      [\n        {\n          address: recipientAddress,\n          value: Number(\n            (parseFloat(amount) * constants.nanoErgInErg).toFixed(1),\n          ),\n        },\n      ],\n      {\n        headers: {\n          api_key: this.props.apiKey,\n        },\n      },\n    )\n\n  handleSubmit = (values, { setSubmitting, resetForm, setStatus }) => {\n    setStatus({ status: 'submitting' })\n    this.paymentSend(values)\n      .then(({ data }) => {\n        resetForm(initialFormValues)\n        setStatus({\n          state: 'success',\n          msg: (\n            <>\n              <p>\n                Your payment has been sent successfully. The transaction ID is -{' '}\n                <CopyToClipboard>{data}</CopyToClipboard>\n              </p>\n              <p>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://explorer.ergoplatform.com/en/transactions/${data}`}\n                >\n                  Click Here To Go To The Explorer\n                </a>\n              </p>\n            </>\n          ),\n        })\n        this.setState({ isShowTransactionId: true })\n      })\n      .catch(err => {\n        const errMessage = err.data ? err.data.detail : err.message\n        customToast('error', errMessage)\n        setSubmitting(false)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"col-4\">\n        <div className=\"card bg-white p-4 mb-4\">\n          <h2 className=\"h5 mb-3\">Payment send</h2>\n          <Formik\n            initialValues={initialFormValues}\n            onSubmit={this.handleSubmit}\n          >\n            {({ status, isSubmitting }) => (\n              <Form>\n                {status &&\n                  status.state === 'success' &&\n                  this.state.isShowTransactionId && (\n                    <div className=\"alert alert-success alert-dismissible\">\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        onClick={() =>\n                          this.setState({ isShowTransactionId: false })\n                        }\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                      {status.msg}\n                    </div>\n                  )}\n                <div className=\"form-group\">\n                  <label htmlFor=\"recipient-address\">Recipient address</label>\n                  <Field\n                    type=\"text\"\n                    name=\"recipientAddress\"\n                    id=\"recipient-address-input\"\n                    className=\"form-control\"\n                    placeholder=\"Enter recipient address\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"amount\">Amount</label>\n                  <Field\n                    type=\"text\"\n                    name=\"amount\"\n                    id=\"amount-input\"\n                    className=\"form-control\"\n                    placeholder=\"Minimum 0.001 ERG\"\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  disabled={isSubmitting}\n                >\n                  Send\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PaymentSendForm\n","import React, { PureComponent } from 'react'\nimport { Formik, Form } from 'formik'\nimport NumberFormat from 'react-number-format'\nimport nodeApi from '../../../../../api/api'\nimport customToast from '../../../../../utils/toast'\n\nconst initialFormValues = {\n  walletPassword: '',\n}\n\nclass GetBalanceForm extends PureComponent {\n  state = {\n    isShowBalance: false,\n  }\n\n  getBalance = () =>\n    nodeApi.get('/wallet/balances', {\n      headers: {\n        api_key: this.props.apiKey,\n      },\n    })\n\n  handleSubmit = (values, { setSubmitting, resetForm, setStatus }) => {\n    setStatus({ status: 'submitting' })\n    this.getBalance(values)\n      .then(({ data: { balance } }) => {\n        resetForm(initialFormValues)\n        setStatus({\n          state: 'success',\n          msg: (\n            <>\n              Your wallet balance -{' '}\n              <NumberFormat\n                value={(balance / 1000000000).toFixed(8)}\n                displayType={'text'}\n                thousandSeparator={true}\n                suffix={' ERG'}\n                className=\"font-weight-bold\"\n              />\n            </>\n          ),\n        })\n        this.setState({ isShowBalance: true })\n      })\n      .catch(err => {\n        const errMessage = err.data ? err.data.detail : err.message\n        customToast('error', errMessage)\n        setSubmitting(false)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"col-4\">\n        <div className=\"card bg-white p-4 mb-4\">\n          <h2 className=\"h5 mb-3\">Get confirmed wallet balance</h2>\n          <Formik\n            initialValues={initialFormValues}\n            onSubmit={this.handleSubmit}\n          >\n            {({ status, isSubmitting }) => (\n              <Form>\n                {status &&\n                  status.state === 'success' &&\n                  this.state.isShowBalance && (\n                    <div className=\"alert alert-info alert-dismissible\">\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        onClick={() => this.setState({ isShowBalance: false })}\n                      >\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                      {status.msg}\n                    </div>\n                  )}\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  disabled={isSubmitting}\n                >\n                  Get\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GetBalanceForm\n","import React, { PureComponent } from 'react'\nimport nodeApi from '../../../../../api/api'\nimport customToast from '../../../../../utils/toast'\nimport CopyToClipboard from '../../../../common/CopyToClipboard'\n\nclass GetWalletAddressesForm extends PureComponent {\n  state = {\n    isShowWalletAddresses: false,\n    walletAddresses: [],\n  }\n\n  getWalletAddresses = () =>\n    nodeApi.get('/wallet/addresses', {\n      headers: {\n        api_key: this.props.apiKey,\n      },\n    })\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    this.getWalletAddresses()\n      .then(({ data: walletAddresses }) => {\n        this.setState({ isShowWalletAddresses: true, walletAddresses })\n      })\n      .catch(err => {\n        const errMessage = err.data ? err.data.detail : err.message\n        customToast('error', errMessage)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"col-4\">\n        <div className=\"card bg-white p-4 mb-4\">\n          <h2 className=\"h5 mb-3\">Get all wallet addresses</h2>\n          <form onSubmit={this.handleSubmit}>\n            {this.state.isShowWalletAddresses && (\n              <div className=\"alert alert-info alert-dismissible\">\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  onClick={() =>\n                    this.setState({ isShowWalletAddresses: false })\n                  }\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n                <p className=\"mb-1\">Wallet Addresses:</p>\n                <ul className=\"mb-3\">\n                  {this.state.walletAddresses.map(addr => (\n                    <li className=\"mb-1\" key={addr}>\n                      <CopyToClipboard>{addr}</CopyToClipboard>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Get\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GetWalletAddressesForm\n","import React, { Component, memo } from 'react'\nimport { connect } from 'react-redux'\nimport PaymentSendForm from './components/PaymentSendForm'\nimport GetBalanceForm from './components/GetBalanceForm'\nimport GetWalletAddressesForm from './components/GetWalletAddressesForm'\nimport { apiKeySelector } from '../../../store/selectors/app'\nimport {\n  isWalletInitializedSelector,\n  isWalletUnlockedSelector,\n} from '../../../store/selectors/wallet'\n\nconst mapStateToProps = state => ({\n  apiKey: apiKeySelector(state),\n  isWalletInitialized: isWalletInitializedSelector(state),\n  isWalletUnlocked: isWalletUnlockedSelector(state),\n})\n\nclass Wallet extends Component {\n  renderState = state =>\n    ({\n      unlocked: apiKey => this.renderWalletUnlockedState(apiKey),\n      locked: () => this.renderWalletLockedState(),\n      initialized: apiKey => this.renderInitializedState(apiKey),\n    }[state])\n\n  renderWalletUnlockedState = apiKey => (\n    <div className=\"container-fluid pt-4\">\n      <div className=\"row\">\n        <PaymentSendForm apiKey={apiKey} />\n        <GetBalanceForm apiKey={apiKey} />\n        <GetWalletAddressesForm apiKey={apiKey} />\n      </div>\n    </div>\n  )\n\n  renderWalletLockedState = () => (\n    <div className=\"container-fluid pt-4\">\n      <p>\n        The wallet UI is locked. You need to unlock the wallet to access its UI.\n      </p>\n    </div>\n  )\n\n  renderInitializedState = () => (\n    <div className=\"container-fluid pt-4\">\n      <p>You need to initialize your wallet to access wallet UI.</p>\n    </div>\n  )\n\n  render() {\n    const { apiKey, isWalletUnlocked, isWalletInitialized } = this.props\n\n    if (apiKey === '') {\n      return (\n        <div className=\"container-fluid pt-4\">\n          <p>To continue, please set your API key.</p>\n        </div>\n      )\n    }\n\n    if (!isWalletInitialized) {\n      return this.renderState('initialized')(apiKey)\n    }\n\n    if (isWalletUnlocked) {\n      return this.renderState('unlocked')(apiKey)\n    }\n\n    return this.renderState('locked')()\n  }\n}\n\nexport default connect(mapStateToProps)(memo(Wallet))\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Layout from '../components/layout'\nimport Dashboard from '../components/pages/Dashboard'\nimport Wallet from '../components/pages/Wallet'\n\nconst Router = () => (\n  <BrowserRouter basename=\"/panel\">\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/wallet\" component={Wallet} />\n      </Switch>\n    </Layout>\n  </BrowserRouter>\n)\n\nexport default Router\n","import { combineReducers } from 'redux'\nimport appSlice from '../slices/appSlice'\nimport walletSlice from '../slices/walletSlice'\n\nexport default combineReducers({\n  app: appSlice.reducer,\n  wallet: walletSlice.reducer,\n})\n","import axios from 'axios'\nimport environment from '../utils/environment'\n\nfunction NetworkError({ status, message, data, statusText }) {\n  this.name = 'NetworkError'\n  this.message = message || statusText\n  this.status = status\n  this.data = data\n}\n\nNetworkError.prototype = Object.create(Error.prototype)\n\nconst oracleApi = axios.create({\n  baseURL: environment.oracleApiLink,\n  timeout: 1000 * 10,\n  crossDomain: true,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\noracleApi.interceptors.response.use(\n  response => Promise.resolve(response),\n  error => Promise.reject(new NetworkError(error.response || error)),\n)\n\nexport default oracleApi\n","import Axios from 'axios'\nimport walletActions from '../actions/walletActions'\nimport nodeApi from '../../api/api'\nimport { apiKeySelector } from '../selectors/app'\nimport oracleApi from '../../api/oracleApi'\n\nexport default store => next => action => {\n  const { dispatch, getState } = store\n  const apiKey = apiKeySelector(getState())\n\n  switch (action.type) {\n    case walletActions.checkWalletStatus.type:\n      nodeApi\n        .get('/wallet/status', {\n          headers: {\n            api_key: apiKey,\n          },\n        })\n        .then(({ data: walletData }) => {\n          dispatch(walletActions.setIsWalletUnlocked(walletData.isUnlocked))\n          dispatch(\n            walletActions.setIsWalletInitialized(walletData.isInitialized),\n          )\n          dispatch(walletActions.setWalletStatusData(walletData))\n        })\n        .catch(() => {})\n\n      break\n\n    case walletActions.getWalletBalance.type:\n      nodeApi\n        .get('/wallet/balances', {\n          headers: {\n            api_key: apiKey,\n          },\n        })\n        .then(({ data: walletData }) => {\n          dispatch(walletActions.setWalletBalanceData(walletData))\n        })\n        .catch(() => {})\n\n      break\n\n    case walletActions.getErgPrice.type:\n      oracleApi\n        .get('/frontendData', {\n          transformResponse: [\n            ...Axios.defaults.transformResponse,\n            (data: any) => JSON.parse(data),\n          ],\n        })\n        .then(({ data }) => {\n          dispatch(walletActions.setErgPrice(data.latest_price))\n        })\n        .catch(() => {})\n\n      break\n\n    default:\n      break\n  }\n  next(action)\n}\n","import React from 'react'\nimport { toast } from 'react-toastify'\nimport { Provider } from 'react-redux'\nimport Router from './router/router'\nimport createStore from './store'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './assets/styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\ntoast.configure()\nconst store = createStore()\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  )\n}\n\nexport default App\n","import { configureStore, getDefaultMiddleware } from 'redux-starter-kit'\nimport rootReducer from './reducers/rootReducer'\nimport walletMiddleware from './middlewares/walletMiddleware'\n\nexport default () => {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [...getDefaultMiddleware(), walletMiddleware],\n  })\n\n  return store\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}