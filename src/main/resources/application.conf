ergo {
  # Directory to keep data
  directory = ${user.dir}"/ergo/data"

  # Settings for node view holder regime. See papers.yellow.ModifiersProcessing.md
  node {
    # Keep state root hash only and validate transactions via ADProofs
    ADState = false

    # Download block transactions and verify them (requires BlocksToKeep == 0 if disabled)
    verifyTransactions = true

    # Number of last blocks to keep with transactions and ADproofs, for all other blocks only header will be stored.
    # Keep all blocks from genesis if negative
    blocksToKeep = -1

    # Download PoPoW proof on node bootstrap
    PoPoWBootstrap = false

    # Minimal suffix size for PoPoW proof (may be pre-defined constant or settings parameter)
    minimalSuffix = 10

    # Is the node is doing mining
    mining = false

    # If true, a node generates blocks being offline. The only really useful case for it probably is to start a new
    # blockchain
    offlineGeneration = false

    # Delay for miner after succesful block creation
    miningDelay = 1s
  }

  testing {
    # Turn on transaction generator
    transactionGeneration = false

    # If generator is enabled, it generates transactions when mempool size is smaller than keepPoolSize
    keepPoolSize = 1
  }

  #Chain-specific settings. Change only if you are going to launch a new chain!
  chain {

    # Desired time interval between blocks
    blockInterval = 1m

    # length of an epoch in difficulty recalculation. 1 means difficulty recalculation every block
    epochLength = 1

    # Number of last epochs that will  be used for difficulty recalculation
    useLastEpochs = 100

    //Proof-of-Work algorithm and its parameters. Possible options are "fake" and "equihash".
    poWScheme {
      powType = "equihash"
      n = 96 //used by Equihash
      k = 5  //used by Equihash
    }
  }
}
scorex {
  network {
    bindAddress = "0.0.0.0:9001"
    networkChunkSize = 400
    nodeName = "ergo-testnet"
    knownPeers = ["88.198.13.202:9001","139.59.254.126:9001","159.203.94.149:9001"]
    syncInterval = 15s
    syncStatusRefresh = 1m
  }
  restApi {
    bindAddress = "0.0.0.0:9051"
    swaggerInfo {
      description = "The Web Interface to the Ergo API",
      title = "Ergo API",
      termsOfService = "License: Creative Commons CC0",
      contact {
        name = "kushti"
        url = "https://ergoplatform.org/"
        email = "kushti@protonmail.ch"
      }
      license {
        name = "License: Creative Commons CC0"
        url = "https://raw.githubusercontent.com/ergoplatform/ergo/master/LICENSE"
      }
    }
  }
  #remove after scorex fix
  miner {
    offlineGeneration = false
    targetBlockDelay = 60s
    blockGenerationDelay = 1s
  }
}